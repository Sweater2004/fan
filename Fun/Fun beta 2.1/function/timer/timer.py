# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'untitled.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QMessageBox
from os import system
import threading


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 600)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(222, 380, 331, 81))
        self.pushButton.setStyleSheet("font: 14pt \"MS Shell Dlg 2\";")
        self.pushButton.setObjectName("pushButton")
        self.second = QtWidgets.QLineEdit(self.centralwidget)
        self.second.setEnabled(True)
        self.second.setGeometry(QtCore.QRect(70, 110, 191, 131))
        self.second.setStyleSheet("font: 14pt \"MS Shell Dlg 2\";")
        self.second.setObjectName("second")
        self.min = QtWidgets.QLineEdit(self.centralwidget)
        self.min.setGeometry(QtCore.QRect(320, 110, 191, 131))
        self.min.setStyleSheet("font: 14pt \"MS Shell Dlg 2\";")
        self.min.setObjectName("min")
        self.chas = QtWidgets.QLineEdit(self.centralwidget)
        self.chas.setGeometry(QtCore.QRect(550, 110, 191, 131))
        self.chas.setStyleSheet("font: 14pt \"MS Shell Dlg 2\";")
        self.chas.setObjectName("chas")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(110, 40, 91, 51))
        self.label.setStyleSheet("font: 14pt \"MS Shell Dlg 2\";")
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(340, 40, 91, 51))
        self.label_2.setStyleSheet("font: 14pt \"MS Shell Dlg 2\";")
        self.label_2.setObjectName("label_2")
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(580, 40, 91, 51))
        self.label_3.setStyleSheet("font: 14pt \"MS Shell Dlg 2\";")
        self.label_3.setObjectName("label_3")
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.pushButton.setText(_translate("MainWindow", "задать отключение"))
        self.label.setWhatsThis(_translate(
            "MainWindow", "<html><head/><body><p><span style=\" font-size:14pt;\">секунды</span></p><p><br/></p></body></html>"))
        self.label.setText(_translate("MainWindow", "секунды"))
        self.label_2.setText(_translate("MainWindow", "минуты"))
        self.label_3.setText(_translate("MainWindow", "часы"))
        self.an_funk()
        self.infoBox = QMessageBox()

        self.infoBox.setText("Ошибка")
        self.infoBox.setWindowTitle("Внимание")
        self.infoBox.setStandardButtons(QMessageBox.Ok | QMessageBox.Cancel)
        self.infoBox.setIcon(QMessageBox.Warning)

        self.infoBox.exec_()

    def an_funk(self):
        self.pushButton.clicked.connect(self.start_thread_assist)

    def activ(self):
        while True:
            try:
                second = int(self.second.text())
                minut = int(self.min.text())
                chas = int(self.chas.text())
            except ValueError:
                self.infoBox.exec_()
                break

            if(second <= 0 or minut <= 0 or chas <= 0 or chas > 4):
                self.infoBox.exec_()
                break
            else:
                timer = (chas*60*60)+(minut*60)+(second)
                print("Хорошо, компьютер выключится череp:")
                offtime = str(timer)
                system('shutdown -s -t '+offtime)
                break

    def start_thread_assist(self):
        thread = threading.Thread(target=self.activ, args=())
        thread.start()


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
